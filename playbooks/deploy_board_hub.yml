- hosts: k3s_master
  become: yes
  vars:
    board_hub_path: /opt/board-hub
    backend_image: "imoresdev/board-hub:backend"
    frontend_image: "imoresdev/board-hub:frontend"
    registry_user: "{{ lookup('env','DOCKER_USER') }}"
    registry_password: "{{ lookup('env','DOCKER_PASS') }}"

  tasks:

    # -----------------------------
    # Ensure board-hub directory exists
    # -----------------------------
    - name: Create board-hub directory
      file:
        path: "{{ board_hub_path }}"
        state: directory
        mode: '0755'

    # -----------------------------
    # Upload board-hub.zip
    # -----------------------------
    - name: Upload board-hub.zip
      copy:
        src: ../board-hub.zip
        dest: "{{ board_hub_path }}/board-hub.zip"
        mode: '0644'

    # -----------------------------
    # Unzip board-hub.zip
    # -----------------------------
    - name: Extract board-hub.zip
      unarchive:
        src: "{{ board_hub_path }}/board-hub.zip"
        dest: "{{ board_hub_path }}"
        remote_src: yes
        extra_opts: [--strip-components=1]

    # -----------------------------
    # Remove the zip file (optional)
    # -----------------------------
    - name: Remove board-hub.zip
      file:
        path: "{{ board_hub_path }}/board-hub.zip"
        state: absent

    # -----------------------------
    # Now Dockerfiles and builds will work from unzipped folders
    # -----------------------------
    - name: Create backend Dockerfile
      copy:
        dest: "{{ board_hub_path }}/backend/Dockerfile"
        content: |
          FROM python:3.11-slim
          WORKDIR /app
          COPY requirements.txt .
          RUN python -m venv .venv && . .venv/bin/activate && pip install --no-cache-dir -r requirements.txt
          COPY . .
          EXPOSE 8000
          CMD ["/bin/bash","-c","source .venv/bin/activate && uvicorn main:app --host 0.0.0.0 --port 8000"]

    - name: Create frontend Dockerfile
      copy:
        dest: "{{ board_hub_path }}/frontend/Dockerfile"
        content: |
          FROM node:20-slim
          WORKDIR /app
          COPY package.json yarn.lock ./
          RUN yarn install --production
          COPY . .
          EXPOSE 3000
          CMD ["yarn","dev"]
